# Workflow with selective build/push: only if subpath
# changed build that Docker Image version only.
#
# Author: Just van den Broecke - 2021
#
name: Docker Build Push âš“

on:
  push:
    branches: [ master ]
    
jobs:
  # JOB to run change detection
  changes:
    # Uses: https://github.com/marketplace/actions/paths-changes-filter
    runs-on: ubuntu-latest

    # Set job outputs to values from filter step
    outputs:
      pg9: ${{ steps.filter.outputs.pg9 }}
      pg10: ${{ steps.filter.outputs.pg10 }}
      pg11: ${{ steps.filter.outputs.pg11 }}
      pg12: ${{ steps.filter.outputs.pg12 }}
      pg13: ${{ steps.filter.outputs.pg13 }}

    steps:
    # For pull requests it's not necessary to checkout the code
    - name: Pathfilter ðŸ“¦
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          pg9:
            - '9.6/**'
          pg10:
            - '10/**'
          pg11:
            - '11/**'
          pg12:
            - '12/**'
          pg13:
            - '13/**'

    - name: Prepare ðŸ“¦
      id: prep
      run: |
        DOCKER_IMAGE="justb4/pgbackup"
        VERSION="unknown"
        if [[ ${{ steps.filter.outputs.pg9 == 'true' }} ]]; then
         VERSION="9.6"
        elif [[ ${{ steps.filter.outputs.pg10 == 'true' }} ]]; then
         VERSION="10"
        elif [[ ${{ steps.filter.outputs.pg11 == 'true' }} ]]; then
         VERSION="11"
        elif [[ ${{ steps.filter.outputs.pg12 == 'true' }} ]]; then
         VERSION="12"
        elif [[ ${{ steps.filter.outputs.pg13 == 'true' }} ]]; then
         VERSION="13"
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        echo ::set-output name=subdir::${VERSION}
        echo ::set-output name=image::${DOCKER_IMAGE}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

     - name: Show Image Settings ðŸ“¦
       run: echo "IMAGE=${{ steps.prep.outputs.image }} VERSION=${{ steps.prep.outputs.version }} TAGS=${{ steps.prep.outputs.tags }} SUBDIR=${{ steps.prep.outputs.subdir }}"

     - name: Set up Docker Buildx ðŸ“¦
       uses: docker/setup-buildx-action@v1

     - name: Login to DockerHub ðŸ“¦
       if: github.event_name != 'pull_request'
       uses: docker/login-action@v1
       with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}

     - name: Docker Build and Push ðŸ“¦
       uses: docker/build-push-action@v2
       with:
         context: ${{ steps.prep.outputs.subdir }}
         load: true
         push: true
         tags: ${{ steps.prep.outputs.tags }}
         labels: |
           org.opencontainers.image.source=${{ github.event.repository.html_url }}
           org.opencontainers.image.created=${{ steps.prep.outputs.created }}
           org.opencontainers.image.revision=${{ github.sha }}
